#### CDN links ####
<!-- CDN file link-->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.20.0/dist/bootstrap-table.min.css">

<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
<script src="https://unpkg.com/bootstrap-table@1.20.2/dist/bootstrap-table.min.js"></script>

#### SOAP API for Query Folder Id ####

<script runat="server"> 
Platform.Load("core", "1.1.1");
var DEval = Request.GetQueryStringParameter("DEval"); 
var rr = Platform.Function.CreateObject("RetrieveRequest");
Platform.Function.SetObjectProperty(rr, "ObjectType", "QueryDefinition");
Platform.Function.AddObjectArrayItem(rr, "Properties", "CustomerKey");
Platform.Function.AddObjectArrayItem(rr, "Properties", "CategoryID");

var sfp = Platform.Function.CreateObject("SimpleFilterPart");
Platform.Function.SetObjectProperty(sfp, "Property", "CustomerKey");
Platform.Function.SetObjectProperty(sfp, "SimpleOperator", "equals");
Platform.Function.AddObjectArrayItem(sfp, "Value", DEval);

Platform.Function.SetObjectProperty(rr, "Filter", sfp);

var StatusAndRequestID = [0,0];
var Result = Platform.Function.InvokeRetrieve(rr,StatusAndRequestID);

if(Result != null) {

    var queryCatId = Result[0].CategoryID;
}

else { Write("Query couldn't be found");}
</script>

#### CSS ####
<style type="text/css">
  :root {
    --white: #ffffff;
    --light: #f0eff3;
    --black: #000000;
    --dark-blue: #1f2029;
    --dark-light: #353746;
    --red: #da2c4d;
    --yellow: #f8ab37;
    --grey: #ecedf3;
  }
  ::selection {
    color: var(--white);
    background-color: var(--black);
  }
  ::-moz-selection {
    color: var(--white);
    background-color: var(--black);
  }
  ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
  color:var(--white);
  opacity: 1; /* Firefox */   
  font-size: 14px;
  line-height: 25px;
  letter-spacing: 1px;
}

:-ms-input-placeholder { /* Internet Explorer 10-11 */
  color: var(--white);
  font-size: 14px;
  line-height: 25px;
  letter-spacing: 1px;
}

::-ms-input-placeholder { /* Microsoft Edge */
  color: var(--white);
  font-size: 14px;
  line-height: 25px;
  letter-spacing: 1px;
}
  .table {
  
     background-color: var(--white);
}
  .section {
    position: relative;
    width: 100% !important;
    display: block;
    float:left;
  }
  .over-hide {
    overflow: hidden;
  }
  .z-bigger {
    z-index: 100 !important;
  }
  .checkbox:checked ~ .background-color{
    background-color: var(--white);
  }
  [type="checkbox"]:checked,
  [type="checkbox"]:not(:checked),
  [type="radio"]:checked,
  [type="radio"]:not(:checked){
    position: absolute;
    left: -9999px;
    width: 0;
    height: 0;
    visibility: hidden;
  }
  .checkbox:checked + label,
  .checkbox:not(:checked) + label{
    position: relative;
    width: 90px;
    display: inline-block;
    padding: 0;
    margin: 0 auto;
    text-align: center;
    margin: 17px 0;
    margin-top: 100px;
    height: 10px;
    border-radius: 4px;
    background-image: linear-gradient(298deg, var(--red), var(--yellow));
    z-index: 100 !important;
  }
  .checkbox:checked + label:before,
  .checkbox:not(:checked) + label:before {
    position: absolute;
    font-family: 'unicons';
    cursor: pointer;
    top: -17px;
    z-index: 2;
    font-size: 20px;
    line-height: 40px;
    text-align: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    -webkit-transition: all 300ms linear;
    transition: all 300ms linear;
  }
  .checkbox:not(:checked) + label:before {
    content: '\eac1';
    left: 0;
    color: var(--grey);
    background-color: var(--dark-light);
    box-shadow: 0 4px 4px rgba(0,0,0,0.15), 0 0 0 1px rgba(26,53,71,0.07);
  }
  .checkbox:checked + label:before {
    content: '\eb8f';
    left: 30px;
    color: var(--yellow);
    background-color: var(--dark-blue);
    box-shadow: 0 4px 4px rgba(26,53,71,0.25), 0 0 0 1px rgba(26,53,71,0.07);
  }
  .checkbox:checked ~ .section .container .row .col-12 p{
    color: var(--dark-blue);
  }
  .checkbox-tools:checked + label,
  .checkbox-tools:not(:checked) + label{
    position: relative;
    display: inline-block;
    padding: 20px;
    width: 155px;
    font-size: 14px;
    line-height: 25px;
    letter-spacing: 1px;
    margin: 0 auto;
    margin-left: 5px;
    margin-right: 5px;
    margin-bottom: 10px;
    text-align: center;
    border-radius: 4px;
    overflow: hidden;
    cursor: pointer;
    text-transform: uppercase;
    color: var(--white);
    -webkit-transition: all 300ms linear;
    transition: all 300ms linear;
  }
  .checkbox-tools:not(:checked) + label{
    background-color: var(--dark-light);
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  }
  .checkbox-tools:checked + label{
    background-color: transparent;
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
  }
  .checkbox-tools:not(:checked) + label:hover{
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
  }
  .checkbox-tools:checked + label::before,
  .checkbox-tools:not(:checked) + label::before{
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 4px;
    background-image: linear-gradient(298deg, var(--red), var(--yellow));
    z-index: -1;
  }
  .checkbox-tools:checked + label .uil,
  .checkbox-tools:not(:checked) + label .uil{
    font-size: 24px;
    line-height: 24px;
    display: block;
    padding-bottom: 10px;
  }
  .checkbox:checked ~ .section .container .row .col-12 .checkbox-tools:not(:checked) + label{
    background-color: var(--light);
    color: var(--dark-blue);
    box-shadow: 0 1x 4px 0 rgba(0, 0, 0, 0.05);
  }
  .checkbox-budget:checked + label,
  .checkbox-budget:not(:checked) + label{
    position: relative;
    display: inline-block;
    padding: 0;
    padding-top: 20px;
    padding-bottom: 20px;
    width: 260px;
    font-size: 52px;
    line-height: 52px;
    font-weight: 700;
    letter-spacing: 1px;
    margin: 0 auto;
    margin-left: 5px;
    margin-right: 5px;
    margin-bottom: 10px;
    text-align: center;
    border-radius: 4px;
    overflow: hidden;
    cursor: pointer;
    text-transform: uppercase;
    -webkit-transition: all 300ms linear;
    transition: all 300ms linear;
    -webkit-text-stroke: 1px var(--white);
    text-stroke: 1px var(--white);
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
    color: transparent;
  }
  .editable-field{
    width:250px;
    height:61px;
    background-image:linear-gradient(298deg, #da2c4d, #f8ab37);
    justify-content: space-between;
    float:right;
    margin-right:20%;
    border-radius: 5px;
  }
  .editable-input{
    border: none;
    width:100%;
    font-size: inherit;
    background: inherit;
    color: inherit;
    transition: .3s all linear;
    height:100%;
    border-radius: 5px;
  }
  .editable-input:focus{
    outline: none;
  }
  .btn{
    width:120px;
    height:40px;
    background:#14ebff;
    color:#000;
    font-weight:bolder;
    border:#14ebff;
    margin-left:10px;
  }
  h1{
    color:#fff;
  }
  .my-bg{
    background-color:#000;
    min-height:500px;
    color:#fff;
    padding:10px;
  }
  #result{
    padding:10px;
  }
  .res{
    margin-left:10px;
    margin-top:10px;
  }
</style>

#### UI with datatable####

<div class="container-fluid my-bg">
  <center>
    <h1>
      How would you like to identify the Data Extension?
    </h1>
  </center>
  <div class="row">
    <div class="col-md-3">
    </div>
    <div class="col-md-6">
      <form action="%%=RequestParameter('PAGEURL')=%%" method="post">
        <div class="section over-hide z-bigger">
          <div class="row">
            <div class="col-12 pb-5">
              <input checked="checked" class="checkbox-tools form-control" id="tool-1" name="DEprop" type="radio" value="Name"> 
              <label class="for-checkbox-tools" for="tool-1"> Name </label> 
              <input class="checkbox-tools form-control" id="tool-2" name="DEprop" type="radio" value="CustomerKey"> 
              <label class="for-checkbox-tools" for="tool-2"> External Key </label>
              <div class="editable-field">
                <input class="editable-input " maxlength="128" name="DEval" placeholder="Write Name / Key" type="text">
              </div>
            </div>
          </div>
          <input class="btn" type="submit" value="Submit">
        </div>
      </form>
    </div>
    <div class="col-md-3">
    </div>
  </div>
  <br>
  <div id="result">
  </div>
  <!-- row close-->
  <br>
  &nbsp;
  <h3>
    Query Detail
  </h3>
  <table id="query">
    <thead>
      <tr>
        <th data-field="CustomerKey">
          Customer Key
        </th>
        <th data-field="CategoryID">
          Category ID
        </th>
        <th data-field="QueryText">
          Query Text
        </th>
        <th data-field="DEname">
          DataExtensionTarget
        </th>
        <th data-field="DeCustomerKey">
          DeCustomerKey
        </th>
        <th data-field="TargetUpdateType">
          TargetUpdateType
        </th>
      </tr>
    </thead>
  </table>
  <h3>
    Data Extension Detail
  </h3>
  <table id="table">
    <thead>
      <tr>
        <th data-field="Name">
          Name
        </th>
        <th data-field="ObjectID">
          Object Id
        </th>
        <th data-field="FieldType">
          Field Type
        </th>
        <th data-field="IsPrimaryKey">
          Is Primary Key
        </th>
        <th data-field="MaxLength">
          Max Length
        </th>
      </tr>
    </thead>
  </table>
</div>

#### SSJS Code ####

<p>
  <!-- ssjs code-->
</p>
<script runat="server">
  Platform.Load("core", "1.1.1");
  Platform.Function.ContentBlockByKey("deRetrieve");
  var DEprop = Request.GetQueryStringParameter("DEprop");
  var DEval = Request.GetQueryStringParameter("DEval"); 
  
  var qres = queryRetrieve(DEval,DEprop);
  var queryResultS = Stringify(qres);  
  
  if(qres){   
    var DEval = qres[0]['DataExtensionTarget']['CustomerKey'];
    var DEprop = 'CustomerKey';  
    var CategoryID = queryCatId;   
    var qPathS = Stringify(queryPath(queryCatId,qres[0]['Name']));
    
  } 
  
  var path = deRetrieve(DEval, DEprop); 
  var dePathS = Stringify(path[0]);
  var custKeyS = Stringify(path[1].CustomerKey); 

  var flds = accountRetrieve(DEval);
  var deFieldS = Stringify(flds);
    
</script>
<script>
  var dePath = <ctrl:var name=dePathS />;
  var custKey = <ctrl:var name=custKeyS />;
  var deField = <ctrl:var name=deFieldS />;
  var queryResult = <ctrl:var name=queryResultS />;
  var queryPath = <ctrl:var name=qPathS />;
  res = "Data Extension Path : " + dePath + " <br> Customer Key : " + ((custKey) ? custKey : '') + "<br> Query Path : "+ queryPath;
  document.getElementById("result").innerHTML = res; 
</script>

<script>
  
function getTargetDataExtenstionDetail(myData) {
    myData[0]['DeCustomerKey']  = myData[0]['DataExtensionTarget']['CustomerKey'];
    myData[0]['DEname'] =  myData[0]['DataExtensionTarget']['Name'];     
    return myData;
}
  
var $table = $('#table')
  $(function() {
    var data = deField
    $table.bootstrapTable({data: data,pagination: true,search: true})
  }) 
  
var $table2 = $('#query')
  $(function() {
    var res = getTargetDataExtenstionDetail(queryResult);    
    console.log(res);
    var query = res;    
    $table2.bootstrapTable({data: query})
   
})
</script>
